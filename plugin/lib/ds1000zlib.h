#ifndef __ds1000zlib__
#define __ds1000zlib__

#include "ds1000zstr.h"

int __cdecl _mem_set_type(void *Dst, int Type);
void *__cdecl _mem_alloc_system_zero(unsigned int Size);
void *__cdecl _mem_alloc_system_zero_uncached(unsigned int size);
void _int_disable(void);
void _int_enable(void);
void __cdecl SetPSR(unsigned int);
unsigned int GetPSR(void);
int __cdecl task_set_error(int ErrCode);
int __cdecl _mem_zero(void *Buffer, int size);
void *__cdecl GUI_PicGetImageSize(int OffsetID, __int16 *ImgWidth, __int16 *ImgHeight);
void *__cdecl GUI_PicGetImagePtr(int OffsetID);
BitmapHeader *__cdecl GUI_PicGetDataOff(int Index);
RemDivI64 __cdecl __aeabi_ldivmod(int64_t numerator, int64_t denominator);
RemDivU64 __cdecl __aeabi_uldivmod(unsigned __int64 numerator, unsigned __int64 denominator);
double __cdecl __aeabi_ddiv(double, double);
double __cdecl __aeabi_dmul(double, double);
__int64 __cdecl __aeabi_d2lz(double);
void *__cdecl DCP_Memcpy(void *Dst, void *Src, int Size, int DevNo);
void *__cdecl DCP_Memset(void *Dst, int FillCode, int Size, int DevNo);
int __cdecl DCP_BltCopy(void *Dst, int LineLength, void *Src, int LinesNum, int CopySize, int DevNo);
void * malloc(size_t);
void * calloc(size_t, size_t);
void *__cdecl realloc(void *Buffer, int Size);
void free(void *);
unsigned int __cdecl CRC32_CalkBuffer(void *Buffer, __int32 Size);
RemDivI32 __cdecl __aeabi_idivmod(int numerator, int denominator);
RemDivU32 __cdecl __aeabi_uidivmod(unsigned int numerator, unsigned int denominator);
unsigned int __cdecl SCR_Color24To16(unsigned int Color);
int _abs(int);
void __cdecl SCR_FontOutCharCrLF(int Chr);
void __cdecl SCR_MoveAndOutChar(int Char, int X, int Y);
int __cdecl SCR_HorLineWin2(int Y, int X1, int X2);
int SCR_GetCurSlot(void);
int __cdecl SCR_PutPixel(int X, int Y, int Color);
unsigned __int16 __cdecl SCR_GetPixel(int X, int Y);
int __cdecl SCR_SelectScreenSlot(int SlotNo);
int __cdecl DCP_RectCopy(void *Src, void *Dst, int X, int Y, __int16 TargetWidth, __int16 SourceWidth, __int16 SourceHeight);
int __cdecl DCP_OutPicto(void *Picto, __int16 SourceWidth, __int16 SourceHeight, void *DstBuffer, int TargetWidth, int TargetHeight, int X, int Y);
int __cdecl memcpy(void *Target, void *Source, int Len);
size_t strlen(const char *);
int __cdecl strncmp(const char *, const char *, int len);
char * memcmp(char *, const char *, size_t);
void __cdecl Beeper_Generate(int Freq, int Delay);
void __cdecl Beeper_GenerateInt(int Freq, int Delay, void (__cdecl *DelayFunc)(int Delay));
void __cdecl LED_On(int LEDOnMask);
int __cdecl LED_Off(int BitMaskClear);
int GetCurLedState(void);
int __cdecl LED_IsOn(int TestedLed);
int __cdecl FPGA_DAC8560Setup(int MuxSelect, int DACValue);
int __cdecl FPGA_Wr_C3_ByChannelNo(int Channel, int DACValue);
int __cdecl I2C_Write_nvram(void *Buffer, int len, int Address);
int __cdecl I2C_ReadNvram(void *Buffer, int Len);
int __cdecl SPI2_NVRAM_Read(int ReadAddress, void *Buffer, int Len);
__int64 GetCurTimeLong(void);
int __cdecl strcpy(char *Target, char *Source);
int __cdecl strcmp(const char *, const char *);
void __cdecl ZeroMem(void *target, int Len);
float __cdecl __aeabi_i2f(int);
float __cdecl __aeabi_fmul(float, float);
float __cdecl __iar_fadd(float, float);
void __cdecl __aeabi_cfrcmple(float, float);
void __cdecl __aeabi_cfcmple(float, float);
double __cdecl __aeabi_i2d(int);
double __cdecl __aeabi_dadd(double, double);
void __cdecl __aeabi_cdrcmple(double, double);
void __cdecl __aeabi_cdcmple(double, double);
int __cdecl _mem_free(void *Ref);
void __cdecl StoreDwordNotAligned(int Value, void *Target);
double __cdecl __aeabi_ui2d(unsigned int);
float __cdecl __aeabi_d2f(double);
float __cdecl __aeabi_fsub(float, float);
double __cdecl __aeabi_f2d(float Var);
int __cdecl __aeabi_d2iz(double);
FILE * usb_fopen(const char *, const char *);
int __cdecl usb_read(int hFile, void *Buffer, int Len);
int __cdecl usb_write(FILE *hOut, void *Buffer, int len);
int usb_fclose(FILE *);
int fcloseall(void);
int usb_remove(const char *);
int __cdecl usb_rmdir(char *Path);
int __cdecl usb_mkdir(char *Path);
int __cdecl usb_access(char *filename);
int __cdecl usb_chdir(char *path);
int __cdecl usb_findfirst(char *Maask, FindFirstBuffer *, int FileAttr);
int __cdecl usb_findnextfile(FindFirstBuffer *);
__int64 usb_getdisksize(void);
int __cdecl setjump(void *Buffer);
int __cdecl abs(int);
void *__cdecl strncpy(char *, const char *, size_t);
char * strcat(char *, const char *);
void __cdecl __aeabi_cfcmpeq(float, float);
int __cdecl __aeabi_f2iz(float);
unsigned __int64 __cdecl __aeabi_f2ulz(float);
float __cdecl __aeabi_l2f(__int64);
float __cdecl __aeabi_ul2f(unsigned __int64);
int sprintf(char *, const char *, ...);
int __cdecl setmem(void *Target, int Size, int Code);
char * strstr(const char *, const char *);
int __cdecl _mutex_init(void *hMutex, void *AttrPtr);
int __cdecl _mutex_lock(void *Mutex);
int __cdecl _mutex_unlock(void *hSignal);
int __cdecl __time_delay(int DelayMillisec);
float __cdecl __aeabi_ui2f(unsigned int);
float __cdecl __aeabi_fdiv(float, float);
int __cdecl _io_fopen(char *Name, char *Type);
int __cdecl io_ioctl(FILE *hFile, int Code, void *Buff);
int __cdecl write(FILE *hOut, void *Buffer, int len);
int __cdecl read(int hFile, void *Buffer, int Len);
unsigned int __cdecl __aeabi_f2uiz(float);
int __cdecl uffs_open(const char *, int Mode);
int __cdecl uffs_close(int Handle);
int __cdecl uffs_read(int fd, void *Buffer, __int32 size);
int __cdecl uffs_write(int hFile, void *Buffer, int Length);
int __cdecl uffs_seek(void *fd, __int32 Pos, int Mode);
int __cdecl uffs_remove(char *Filename);
int __cdecl uffs_stat(char *Path, uffs_stat_ *);
int __cdecl uffs_space_total(char *MountPointName);
int __cdecl uffs_IsFilePresent(char *);
int __cdecl uffs_GetFileSize(char *Filename);
int __cdecl SPI2_NVRAM_Wr(void *SourceBuf, int Length, int PageOffset, int PageNo);
unsigned int __cdecl __aeabi_d2uiz(double);
int __cdecl _time_delay(int microseconds);
int __cdecl KBD_PutKeyEvent(int Key, int Delta);
void *__cdecl _mem_alloc_system(unsigned int Size);
double __cdecl __aeabi_dsub(double, double);
double __cdecl sqrtl(double);
void __cdecl memset(void *Target, int Size, int Value);
int __cdecl fseek(int hFile, int Pos, int Mode);
void *__cdecl MFS_mem_alloc_system_zero(unsigned int Size);
int __cdecl strchr(char *, int);
int __cdecl _lwsem_wait(LWSEM_STRUCT *);
int __cdecl _lwsem_post(LWSEM_STRUCT *Sem);
int __cdecl lwsem_create(LWSEM_STRUCT *, int);
int __cdecl task_create(int CpuNum, int TemplateIndex, task_template_struct *Descr);
int __cdecl lwsem_wait_ticks(LWSEM_STRUCT *, int Time);
float __cdecl ChannelGetAttenuation(int ChanelNo);
__int32 strtol(const char *, char **, int);
int __cdecl _lwsem_destroy(LWSEM_STRUCT *);
int GetTicksPerSecond(void);
int __cdecl _mem_copy(void *Source, void *tagetr, int len);
int __cdecl strnlen(char *, int);
void *__cdecl _mem_alloc(unsigned int Size);
int __cdecl __iar_Memchr(char *Buf, int Char, int Len);
double __cdecl __aeabi_l2d(__int64);
double __cdecl __aeabi_ul2d(unsigned __int64);
unsigned __int64 __cdecl __aeabi_d2ulz(double);
void __cdecl SelectFilesystem(FS_SELECT Id);
FS_SELECT GetSelectedFilesystem(void);
__int64 GetWorkTime(void);
__int64 __cdecl __aeabi_f2lz(float);
__int32 __iar_Stoull(const char *, char **, int);
int __cdecl Rot_left_long(unsigned __int64, int Counter);
double __cdecl atof(char *Str);
int __cdecl uffs_findnext(FindFirstBuffer *FFBuff);
int __cdecl _task_set_priority(int TaskId, int Priority, void *Buf);
int sscanf(const char *, const char *, ...);
char * _strchr(const char *, int);
int __cdecl tolower(int);
char *__cdecl strupper(char *);
int __cdecl strreplacechr(char *, int FindChr, int ReplaceChr);
void __cdecl strdelchar(char *, int CharToTrim);
int __cdecl atoi(char *String);
void __cdecl __aeabi_cdcmpeq(double, double);
USB_DevType USB_GetDevType(void);
float __cdecl fmodf(float x, float y);
int __cdecl _lwmsgq_init(void *Area, int NumMsg, int MsgSize);
int __cdecl _lwmsgq_send(void *Area, void *Msg, int Flags);
int __cdecl _lwmsgq_receive(void *Handle, void *MsgBuf, int Flags, int Timeout, void *TicksStruct);
int __cdecl _mqx_exit(int ErrorCode);
void *__cdecl _mem_alloc_zero(unsigned int Size);
int __cdecl _sem_create(char *Name, int, int);
int __cdecl lwip_accept(int s, void *addr, int *addrlen);
int __cdecl lwip_bind(int fd, void *SockAddr, int Namelen);
int __cdecl lwip_close(int fd);
int __cdecl lwip_listen(int Socket, int backlog);
int __cdecl lwip_recvfrom(int sock, void *Buffer, int Len, int flags, void *from, int *fromlen);
int __cdecl lwip_read(int sock, void *Buffer, int Len);
int __cdecl lwip_recv(int sock, void *Buffer, int Len, int flags);
int __cdecl lwip_send(int sock, void *Buf, int Len, int Flags);
int __cdecl lwip_sendto(int soc, void *Buffer, int len, int flags, void *Toaddr, int to_len);
int __cdecl lwip_socket(int domain, int type, int protocol);
int __cdecl lwip_write(int sock, void *Buf, int Len);
int __cdecl lwip_select(int maxfd, void *readset, void *writeset, void *exceptset, void *timeout);
int __cdecl lwip_getsockname(int fd, void *sockaddr, int *Len);
char *__cdecl IpAddr2Text_(unsigned __int8 *IP);
int __cdecl IpAddr2Text(int Ip, char *Buffer, int BufferLen);
int __cdecl Sleep(int ms);

#endif
